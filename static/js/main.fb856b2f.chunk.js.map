{"version":3,"sources":["components/pokestore.js","components/pokeheader.js","components/pokefilter.js","components/pokelist.js","components/pokedisplay.js","App.js","serviceWorker.js","index.js"],"names":["PokeStore","filter","type_url","isTypeSelected","getJson","_callee","url","api_url","data","regenerator_default","a","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","data_types","fromPromise","this","limit","offset","listOptions","move","count","_this","setTypeUrl","list","pokemons_list","type","fil","dat","filterate","RegExp","value","results","item","test","name","pokemon_url","decorate","observable","computed","data_display","setList","action","store","Header","react_default","createElement","PokeFilter","observer","_React$Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","select_type","e","key","target","selectedIndex","getAttribute","props","filter_handle","inherits","createClass","_this$props$store","state","types_list","map","index","id","placeholder","onChange","bind","React","Component","PokeList","take_url","_this2","filteredPokemons","onClick","pokemon","PokeDisplay","species","abilities","ability","weight","height","avatar1","src","sprites","front_default","alt","avatar2","front_female","console","log","App","pokeheader","pokefilter","pokelist","pokedisplay","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb856b2f.chunk.js","sourcesContent":["import { observable, action, computed, decorate } from 'mobx'\r\nimport { fromPromise } from 'mobx-utils'\r\n\r\nclass PokeStore {\r\n\tpokemons_list\r\n\tfilter = \"\"\r\n\ttype_url = \"https://pokeapi.co/api/v2/pokemon\"\r\n\tpokemon_url\r\n\tisTypeSelected = false\r\n\r\n\tgetJson = async (url) => {\r\n\t\tconst api_url = await fetch(`${url}`)\r\n\t\tconst data = await api_url.json()\r\n\t\treturn data\r\n\t}\r\n\r\n\tget data() {\r\n\t\treturn fromPromise(this.getJson(this.type_url))\r\n\t}\r\n\r\n\tget data_display() {\r\n\t\treturn fromPromise(this.getJson(this.pokemon_url))\r\n\t}\r\n\r\n\tdata_types = fromPromise(this.getJson(\"https://pokeapi.co/api/v2/type\"))\r\n\t\r\n\r\n\tsetList(list) {\r\n\t\tthis.pokemons_list = list\r\n\t}\r\n\r\n\tsetTypeUrl(type) {\r\n\t\tthis.type_url = type\r\n\t}\r\n\r\n\tfilteredPokemons(fil, dat) {\r\n\t\tconst filterate = new RegExp(fil, \"i\")\r\n\t\treturn dat.value.results.filter(item => !fil || filterate.test(item.name))\r\n\t}\r\n\r\n\tlimit = 10\r\n\toffset = 0\r\n\r\n\tlistOptions = (move, count) => {\r\n\t\tif(!this.isTypeSelected) { // this condition block the bug\r\n\t\t\tif (count > 0) \r\n\t\t\t  this.limit = count\r\n\t\t\tif (move === 1) \r\n\t\t\t  this.offset += this.limit\r\n\t\t\tif (move === -1) \r\n\t\t\t  this.offset -= this.limit\r\n\t\t\tif (this.offset < 0)\r\n\t\t\t  this.offset = 0\r\n\t\t\tthis.setTypeUrl(`https://pokeapi.co/api/v2/pokemon?offset=${this.offset}&limit=${this.limit}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\ndecorate(PokeStore, {\r\n\tpokemons_list: observable,\r\n\tfilter: observable,\r\n\ttype_url: observable,\r\n\tpokemon_url: observable,\r\n\tisTypeSelected: observable,\r\n\tdata: computed,\r\n\tdata_display: computed,\r\n\tdata_types: observable,\r\n\tsetList: action,\r\n\tsetTypeUrl: action\r\n})\r\n\r\nconst store = new PokeStore\r\nexport default store","import React from 'react'\r\n\r\nconst Header = () => (\r\n\t<div>\r\n\t\t<h2>Pokedex App</h2>\r\n\t\t<h5>listing of the pokemons</h5>\r\n\t</div>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst PokeFilter = observer(\r\n\tclass PokeFilter extends React.Component {\r\n\r\n\t\tselect_type = e => {\r\n\t\t\tvar key = e.target[e.target.selectedIndex].getAttribute('id')\r\n\t\t\tif(key == 50) {\r\n\t\t\t\tthis.props.store.isTypeSelected = false\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.store.isTypeSelected = true\r\n\t\t\t}\r\n\t\t\tthis.props.store.setTypeUrl(e.target.value) \r\n\t\t}\r\n\r\n\t\tfilter_handle = e => { // searching is almost ready\r\n\t\t\tthis.props.store.filter = e.target.value\r\n\t\t\tif(this.props.store.filter) {\r\n\t\t\t\tif(!this.props.store.isTypeSelected) {\r\n\t\t\t\t\tthis.props.store.setTypeUrl(\"https://pokeapi.co/api/v2/pokemon?offset=0&limit=964\")\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif(!this.props.store.isTypeSelected) {\r\n\t\t\t\t\tthis.props.store.setTypeUrl(\"https://pokeapi.co/api/v2/pokemon\")\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t\trender() {\r\n\r\n\t\t\tvar { filter, data_types } = this.props.store\r\n\r\n\t\t\tif(data_types.state === \"fulfilled\") {\r\n\t\t\t\tconst types_list = data_types.value.results.map((item, index) => (\r\n\t\t\t\t\t<option value={item.url} key={index} id={index}>{item.name}</option>\r\n\t\t\t\t))\r\n\t\t\t\treturn( \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input value={filter} placeholder=\"Search\" onChange={this.filter_handle.bind(this)}/>\r\n\t\t\t\t\t\tType:\r\n\t\t\t\t\t\t<select onChange={this.select_type.bind(this)}>\r\n\t\t\t\t\t\t\t<option value=\"https://pokeapi.co/api/v2/pokemon\" id={50}>all</option>\r\n\t\t\t\t\t\t\t{types_list}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport default PokeFilter","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst PokeList = observer (\r\n\tclass PokeList extends React.Component {\r\n\r\n\t\ttake_url = e => {\r\n\t\t\tthis.props.store.pokemon_url = e.target.id\r\n\t\t}\r\n  \t\r\n\t  \trender() {\r\n\r\n\t  \t\tconst {data, isTypeSelected, filter, listOptions, filteredPokemons} = this.props.store\r\n\t  \t\tvar list = <div></div>\r\n\r\n\t  \t\tif(data.state === \"fulfilled\") {\r\n\t  \t\t\tif(!isTypeSelected && !filter) {\r\n\t\t\t     \tlist = data.value.results.map((item, index) => (\r\n\t\t\t\t\t\t<p onClick={this.take_url} id={item.url} key={index}>{item.name}</p>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(!isTypeSelected && filter) {\r\n\t\t\t\t\tlist = filteredPokemons(filter, data).map((item, index) => (\r\n\t\t\t\t\t\t<p onClick={this.take_url} id={item.url} key={index}>{item.name}</p>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\tlist = data.value.pokemon.map((item, index) => (\r\n\t\t\t\t\t\t<p onClick={this.take_url} id={item.pokemon.url} key={index}>{item.pokemon.name}</p>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t  \t\treturn <div>\r\n\t  \t\t\t<div>\r\n\t  \t\t\t\t{list}\r\n\t  \t\t\t</div>\r\n\t  \t\t\t<div>\r\n\t  \t\t\t\t<button onClick={e => listOptions(-1, 0)}>previous</button>\r\n\t  \t\t\t\t<button onClick={e => listOptions(1, 0)}>next</button>\r\n\t  \t\t\t\t<button onClick={e => listOptions(0, 10)}>10</button>\r\n\t  \t\t\t\t<button onClick={e => listOptions(0, 20)}>20</button>\r\n\t  \t\t\t\t<button onClick={e => listOptions(0, 50)}>50</button>\r\n\t  \t\t\t</div>\r\n\t  \t\t</div>\r\n\t  \t}\r\n\t}\r\n)\r\n\r\n\r\nexport default PokeList","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst PokeDisplay = observer(\r\n\tclass PokeDisplay extends React.Component {\r\n\t\trender() {\r\n\r\n\t\t\tconst { data_display } = this.props.store\r\n\r\n\t\t\tif(data_display.state === \"fulfilled\") {\r\n\t\t\t\t\r\n\t\t\t\tconst name = data_display.value.species.name\r\n\r\n\t\t\t\tconst abilities = data_display.value.abilities.map((item, index) => (\r\n\t\t\t\t\t<li value={item.ability.url} key={index}>{item.ability.name}</li>\r\n\t\t\t\t))\r\n\r\n\t\t\t\tconst weight = data_display.value.weight\r\n\r\n\t\t\t\tconst height = data_display.value.height\r\n\r\n\t\t\t\tconst avatar1 = <img src={data_display.value.sprites.front_default} alt=\"\" />\r\n\r\n\t\t\t\tconst avatar2 = <img src={data_display.value.sprites.front_female} alt=\"\" />\r\n\r\n\t\t\t\tconsole.log(data_display.value.sprites.front_default)\r\n\r\n\t\t\t\treturn <div>\r\n\t\t\t\t\t<p>Name: {name}</p>\r\n\t\t\t\t\t<p>Abilities:</p>\r\n\t\t\t\t\t<ul>{abilities}</ul>\r\n\t\t\t\t\t<p>Height: {height}</p>\r\n\t\t\t\t\t<p>Weight: {weight}</p>\r\n\t\t\t\t\t{avatar1}\r\n\t\t\t\t\t{avatar2}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\treturn <div>sex and hunger rule the world!</div>\r\n\t\t}\r\n})\r\n\r\nexport default PokeDisplay","import React from 'react'\n\nimport store from './components/pokestore'\n\nimport Header from './components/pokeheader'\nimport Filter from './components/pokefilter'\nimport List from './components/pokelist'\nimport Display from './components/pokedisplay'\n\nexport default class App extends React.Component {\n\trender() {\n\t\treturn( \n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Filter store={store} />\n\t\t\t\t<List store={store} />\n\t\t\t\t<Display store={store} />\n\t\t\t</div>\n\t\t);\t\t\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}